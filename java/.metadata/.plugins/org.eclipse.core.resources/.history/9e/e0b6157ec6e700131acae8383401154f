package fbinsecurestoxrage;

import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.classfile.LocalVariableTable;
import org.apache.bcel.classfile.Method;
import org.apache.bcel.generic.ASTORE;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.INVOKESTATIC;
import org.apache.bcel.generic.INVOKEVIRTUAL;
import org.apache.bcel.generic.Instruction;
import org.apache.bcel.generic.InstructionHandle;
import org.apache.bcel.generic.InstructionList;
import org.apache.bcel.generic.LocalVariableInstruction;
import org.apache.bcel.generic.MethodGen;

import edu.umd.cs.findbugs.BugInstance;
import edu.umd.cs.findbugs.BugReporter;
import edu.umd.cs.findbugs.Detector;
import edu.umd.cs.findbugs.Priorities;
import edu.umd.cs.findbugs.ba.ClassContext;
import edu.umd.cs.findbugs.ba.bcp.LocalVariable;

public class MainClass implements Detector {
	private BugReporter bugReporter;
	private boolean DEBUG = true;
	public MainClass(BugReporter bugReporter) {
		this.bugReporter = bugReporter;
	}
	
	@Override
	public void report() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void visitClassContext(ClassContext classContext) {
		   JavaClass javaClass = classContext.getJavaClass();
	        Method[] methodList = javaClass.getMethods();

	        for (Method m : methodList) {
	        	if (DEBUG ) {
	                System.out.println(">>> Method: " + m.getName());
	            }
	        	boolean externalStorageFound = false;
	        	ConstantPoolGen cpg = classContext.getConstantPoolGen();
	            MethodGen methodGen = classContext.getMethodGen(m);
	            InstructionList il = methodGen.getInstructionList();
	            InstructionHandle[] ihs = il.getInstructionHandles();
	            for(int i=0; i<ihs.length; i++){
	            	InstructionHandle ih = ihs[i];
	            	Instruction instruction = ih.getInstruction();
	            	//System.out.println(" "+ instruction);
	            	if (instruction instanceof LocalVariableInstruction && externalStorageFound){
	                    LocalVariableInstruction lvi = (LocalVariableInstruction)instruction;
	                    LocalVariableTable lvt = m.getLocalVariableTable();
	                    int index = lvi.getIndex();
	                    org.apache.bcel.classfile.LocalVariable lv = lvt.getLocalVariable(index, ih.getPosition());
	                    if (lv != null )
	                    {
	                      //System.out.println("Using "+lv.getName()+" at "+i);
	                      //System.out.println(" "+ instruction);
	                    }
	                }
	            	if(instruction instanceof INVOKESTATIC){
	            		INVOKESTATIC invoke = (INVOKESTATIC) instruction;
	            		if ("android.os.Environment".equals(invoke.getLoadClassType(cpg).toString()) && "getExternalStorageDirectory".equals(invoke.getMethodName(cpg))) {
	            			externalStorageFound = true;
	                    }
	            	}
	            }
	        }
	}
}
