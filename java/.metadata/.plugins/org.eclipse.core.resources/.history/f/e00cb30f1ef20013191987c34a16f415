import java.io.File;
import java.util.List;

import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.Node;
import org.dom4j.io.SAXReader;
import org.dom4j.*;

import com.sun.xml.internal.ws.message.RootElementSniffer;
 
public class XMLReadExample {
    //@SuppressWarnings("unchecked")
	static void reportError(File file, Node node,int i) throws DocumentException {
		Element root = null;
		if(!file.exists()) {
			Document document = DocumentHelper.createDocument();
			root = document.addElement("BugCollection");
		}
		else {
			SAXReader reader = new SAXReader();
			Document document = reader.read(file);
			root = document.getRootElement(); 
		}
		Element bugnode = root.addElement("BugInstance");
		bugnode.addAttribute("type", "WISPF_INTENT_SPOOFING");
		bugnode.addAttribute("priority", "2");
		bugnode.addAttribute("category", "WISPF");
		Element Class = bugnode.addElement("Class");
		Class.addAttribute("node_name", node.valueOf("@android:name"));
		if(i == 1) {
			
		}
		
	}
    public static void main(String[] args) throws DocumentException {

        SAXReader reader = new SAXReader();
        
        Document document = reader.read("/home/suman/Desktop/com.instagram.android/AndroidManifest.xml");
        
        File xmloutFile = new File("output.xml");
   
        List<Node> nodes = document.selectNodes("/manifest/application/receiver");
        if (nodes.isEmpty()) {
			System.out.println("no receiver found");
		} else {
			for (Node node : nodes) {
				
	    		System.out.println("reveiver name:"+node.valueOf("@android:name"));
	    		if(node.valueOf("@android:exported").equals("false")) {
	    			System.out.println("this receiver is private");
	    		}
	    		else if (node.valueOf("@android:exported").equals("true")) {
	    			if(!node.valueOf("@android:permission").isEmpty()) {
	    				System.out.println("this reciever public is public buts protected by permission");	
	    			}
	    			else {
						System.out.println("this reciever is public and not protected");
						reportError(xmloutFile,node,1);
					}
				}
	    		else {
					if(!node.selectNodes("intent-filer").isEmpty() && 
							node.valueOf("@android:permission").isEmpty()) {
						System.out.println("the reciever is public and not protected");
					}
				}
	        }
		}
        
    }
}